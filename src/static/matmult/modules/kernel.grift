(module kernel
    (exports matmult)

  (define (mult [x : (Vect Int)]
                [x1 : Int]
                [x2 : Int]
                [y : (Vect Int)]
                [y1 : Int]
                [y2 : Int])
    : (Vect Int)
    (let ([r : (Vect Int) (vector (* y2 x1) 0)])
      (begin
        (repeat (i 0 x1) (_ : Unit ())
                (repeat (j 0 y2) (_ : Unit ())
                        (repeat (k 0 y1) (_ : Unit ())
                                (vector-set! r (+ (* i y2) j)
                                             (+ (vector-ref r (+ (* i y2) j))
                                                (* (vector-ref x (+ (* i x2) k))
                                                   (vector-ref y (+ (* k y2) j))))))))
        r))))
