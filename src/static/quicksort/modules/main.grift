(module main
  (imports helpers)

  (define (sort [a : (Vect Int)]
                [p : Int]
                [r : Int])
    : Unit
    (if (< p r)
        (let ([q : Int (partition a p r)])
          (begin
            (sort a p (- q 1))
            (sort a (+ q 1) r)))
        ()))

  (define (main)
    : Unit
    (let ([size : Int (read-int)])
      (let ([a : (Vect Int) (vector size 1)])
        (begin
          (repeat (i 0 size) (_ : Unit ())
                  (vector-set! a i (read-int)))
          (sort a 0 (- size 1))
          (print-int (vector-ref a (- size 1)))
          (display-char #\newline)))))

  (time (main)))
